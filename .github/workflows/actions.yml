name: GitHub Actions

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types:
      - published

permissions: {}

jobs:
  test:
    name: test on Node.js v${{ matrix.node-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        node-version:
          - 20
          - 22
    env:
      # On the build process, the credentials for OAuth can be dummy
      GOOGLE_CLIENT_ID: dummy
      GOOGLE_CLIENT_SECRET: dummy
      GITHUB_CLIENT_ID: dummy
      GITHUB_CLIENT_SECRET: dummy
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Use Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          cache: pnpm

      - name: cache software installed by mise
        id: cache-mise
        uses: actions/cache@v4
        with:
          path: ~/.local/share/mise
          key: ${{ runner.os }}-postgresql

      - name: set up mise
        run: |
          wget -qO - https://mise.jdx.dev/gpg-key.pub | gpg --dearmor | sudo tee /etc/apt/keyrings/mise-archive-keyring.gpg 1> /dev/null
          echo "deb [signed-by=/etc/apt/keyrings/mise-archive-keyring.gpg arch=amd64] https://mise.jdx.dev/deb stable main" | sudo tee /etc/apt/sources.list.d/mise.list
          echo -e "\neval \"\$(mise activate bash)\"\n" | tee --append ~/.bashrc

      - name: install system dependencies
        run: |
          sudo apt update -y -qq
          sudo apt-get install linux-headers-$(uname -r) build-essential libssl-dev libreadline-dev zlib1g-dev libcurl4-openssl-dev uuid-dev icu-devtools libicu-dev libbison-dev flex mise

      - run: cp ./.env.example ./.env
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      # TODO - run: pnpm test

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      # On the build process, the credentials for OAuth can be dummy
      GOOGLE_CLIENT_ID: dummy
      GOOGLE_CLIENT_SECRET: dummy
      GITHUB_CLIENT_ID: dummy
      GITHUB_CLIENT_SECRET: dummy
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Use Node.js v22
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
          check-latest: true
          cache: pnpm

      - name: cache software installed by mise
        id: cache-mise
        uses: actions/cache@v4
        with:
          path: ~/.local/share/mise
          key: ${{ runner.os }}-postgresql

      - name: set up mise
        run: |
          wget -qO - https://mise.jdx.dev/gpg-key.pub | gpg --dearmor | sudo tee /etc/apt/keyrings/mise-archive-keyring.gpg 1> /dev/null
          echo "deb [signed-by=/etc/apt/keyrings/mise-archive-keyring.gpg arch=amd64] https://mise.jdx.dev/deb stable main" | sudo tee /etc/apt/sources.list.d/mise.list
          echo -e "\neval \"\$(mise activate bash)\"\n" | tee --append ~/.bashrc

      - name: install system dependencies
        run: |
          sudo apt update -y -qq
          sudo apt-get install linux-headers-$(uname -r) build-essential libssl-dev libreadline-dev zlib1g-dev libcurl4-openssl-dev uuid-dev icu-devtools libicu-dev libbison-dev flex mise

      - run: cp ./.env.example ./.env
      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint

  publish:
    needs:
      - test
      - lint
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      # On the build process, the credentials for OAuth can be dummy
      GOOGLE_CLIENT_ID: dummy
      GOOGLE_CLIENT_SECRET: dummy
      GITHUB_CLIENT_ID: dummy
      GITHUB_CLIENT_SECRET: dummy
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
          check-latest: true

      - run: pnpm install
      - run: pnpm run build

      - name: Set npm auth token
        run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_AUTH_TOKEN}}" > ~/.npmrc
      - run: pnpm run release
