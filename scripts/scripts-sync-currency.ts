import { mkdir, writeFile } from "node:fs/promises";
import { join } from "node:path";
import { deduplicate, trimLines } from "@phanect/utils";
import { XMLParser } from "fast-xml-parser";

const generateCurrencyEnum = async () => {
  type SixGroupIsoCurrencyList = {
    ISO_4217: {
      CcyTbl: {
        CcyNtry: {
          CtryNm: string;
          CcyNm: string;
          Ccy: string;
          CcyNbr: string;
          CcyMnrUnts: number;
        }[];
      };
    };
  };

  const res = await fetch("https://www.six-group.com/dam/download/financial-information/data-center/iso-currrency/lists/list-one.xml");
  const xmlText = await res.text();
  const xml = new XMLParser().parse(xmlText) as SixGroupIsoCurrencyList;

  const currencyCodes = deduplicate(
    xml.ISO_4217.CcyTbl.CcyNtry.map(({ CtryNm, CcyNm, Ccy }) => ({
      name: CcyNm,
      country: CtryNm,
      code: Ccy,
    })).map((currency) => currency.code)
      .filter((code) => code)
      .sort((codeA, codeB) => codeA > codeB ? 1 : -1)
  );

  const schemaDirPath = join(import.meta.dirname, "../src/lib/db/schema");

  await mkdir(schemaDirPath, { recursive: true });
  await writeFile(
    join(schemaDirPath, "currencies.ts"),
    trimLines(`
      // Auto generated by scripts/scripts-sync-currency.ts. DO NOT EDIT MANUALLY.

      import { pgEnum } from "drizzle-orm/pg-core";

      export const currency = pgEnum("Currency", [ ${ currencyCodes.map((currencyCode) => `"${ currencyCode }"`).join(", ") } ]);
    `),
  );
};

await generateCurrencyEnum();
